/*
   NEO-Layout - Version vom 08.05.2007
   Mod3 (3./4. Ebene) funktioniert ¸ber Win+Ctrl, 
    Mod5 (5./6. Ebene) ¸ber AltGr.
   Zur Umbelegung von Mod3 auf CapsLock und #
    und f¸r einen zweiten Mod5 auf <
    verwende neo20-remap.ahk
*/

;#InstallKeybdHook
#usehook on
#singleinstance force
#LTrim 
  ; Quelltext kann einger¸ckt werden, 
  ; msgbox ist trotzdem linksb¸ndig

SendMode InputThenPlay	

name    = NEO-Layout 2.0
enable  = Aktiviere %name%
disable = Deaktiviere %name%

; ToDo
; --------
; nobreakspace und schmales Leerzeichen


; ANSI-Darstellung von beliebigen Unicode-Zeichen
; -----------------------------------------------
; (benˆtigt f¸r MyUTF_String):
;  - die untenstehende Definition auskommentieren
;  - gew¸nschtes Zeichen in die Zwischenablage befˆrdern
;  - ^!u (Control+Alt+U) dr¸cken
;  - die ANSI-Darstellung aus der Zwischenablage an die 
;    gew¸nschte Stelle ins Skript einf¸gen
/*
^!u::  
   MsgBox, 
     (
     Copy some Unicode text onto the clipboard, 
     then return to this window and press OK to continue.
     )
   Transform, ClipUTF, Unicode
   Clipboard = Transform, Clipboard, Unicode, %ClipUTF%`r`n
   Clipboard = %ClipUTF%
   MsgBox, 
     (
     The clipboard now contains the following line 
     that you can paste into your script. 
     `n%Clipboard%
     )
return
*/


; ‹berpr¸fung auf deutsches Tastaturlayout 
; ----------------------------------------

regread, inputlocale, HKEY_CURRENT_USER, Keyboard Layout\Preload, 1
regread, inputlocalealias, HKEY_CURRENT_USER
     , Keyboard Layout\Substitutes, %inputlocale%
if inputlocalealias <>
   inputlocale = %inputlocalealias%
if inputlocale <> 00000407
{
   suspend   
   regread, inputlocale, HKEY_LOCAL_MACHINE
     , SYSTEM\CurrentControlSet\Control\Keyboard Layouts\%inputlocale%
     , Layout Text
   msgbox, 48, Warnung!, 
     (
     Nicht kompatibles Tastaturlayout:   
     `t%inputlocale%   
     `nDas deutsche QWERTZ muss als Standardlayout eingestellt  
     sein, damit %name% wie erwartet funktioniert.   
     `nƒndere die Tastatureinstellung unter 
     `tSystemsteuerung   
     `t-> Regions- und Sprachoptionen   
     `t-> Sprachen 
     `t-> Details...   `n
     )
   exitapp
}


; Men¸ des Systray-Icons 
; ----------------------

menu, tray, nostandard
menu, tray, add, ÷ffnen, open
   menu, helpmenu, add, About, about
   menu, helpmenu, add, Autohotkey-Hilfe, help
   menu, helpmenu, add
   menu, helpmenu, add, http://&autohotkey.com/, autohotkey
   menu, helpmenu, add, http://www.neo-layout.org/, neo
menu, tray, add, Hilfe, :helpmenu
menu, tray, add
menu, tray, add, %disable%, toggleneo
menu, tray, default, %disable%
menu, tray, add
menu, tray, add, Edit, edit
menu, tray, add, Reload, reload
menu, tray, add
menu, tray, add, Nicht im Systray anzeigen, hide
menu, tray, add, %name% beenden, exitprogram
menu, tray, tip, %name%



;1. Ebene
;---------

^::send {^} ; circumflex, tot
1::send 1
2::send 2
3::send 3
4::send 4
5::send 5
6::send 6
7::send 7
8::send 8
9::send 9
0::send 0
ﬂ::send - 
¥::send {¥} ; akut, tot

q::send x

w::
  If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·πø")
  Else 
    send v
Return

e::
  If A_PriorHotkey = <^>!+ ; Schr‰gstrich
    BSUnicode("≈Ç")
  Else If A_PriorHotkey = ¥ ; akut 
    BSUnicode("ƒ∫")
  Else If A_PriorHotkey = +^ ; caron 
    BSUnicode("ƒæ")
  Else If A_PriorHotkey = #^¥ ; cedilla
    BSUnicode("ƒº")
  Else If A_PriorHotkey = <^>!^ ; Mittenpunkt
    BSUnicode("≈Ä")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·∏∑")
  Else 
    send l
Return 

r::
  If A_PriorHotkey = ^ ; circumflex
    BSUnicode("ƒâ")
  Else If A_PriorHotkey = +^ ; caron
    BSUnicode("ƒç")
  Else If A_PriorHotkey = ¥ ; akut
    BSUnicode("ƒá")
  Else If A_PriorHotkey = #^¥ ; cedilla
    BSUnicode("√ß")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("ƒã")
  Else 
    Send c
Return 

t::
  If A_PriorHotkey = ^ ; circumflex
    BSUnicode("≈µ")
  Else
    send w
Return

z::
  If A_PriorHotkey = #^¥ ; cedilla
    BSUnicode("ƒ∑")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·∏≥")
  Else
    send k
Return

u::
  If A_PriorHotkey = ^           ; circumflex
    BSUnicode("ƒ•")
  Else If A_PriorHotkey = #^+^   ; Querstrich 
    BSUnicode("ƒß")
  Else If A_PriorHotkey = <^>!¥  ; punkt dar¸ber 
    BSUnicode("·∏£")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·∏•")
  Else send h
Return

i::
  If A_PriorHotkey = ^          ; circumflex
    BSUnicode("ƒù")
  Else If A_PriorHotkey = #^^   ; brevis
    BSUnicode("ƒü")
  Else If A_PriorHotkey = #^¥   ; cedilla
    BSUnicode("ƒ£")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("ƒ°")
  Else send g
Return

o::
  If A_PriorHotkey = <^>!+      ; durchgestrichen
    BSUnicode("∆í")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("·∏ü")
  Else send f
Return

p::send q
¸::send ﬂ
+::send ~ ; tilde, soll tot

a::
  If A_PriorHotkey = #^+         ; Diaerese
    Send, {bs}¸
  Else If A_PriorHotkey = #^++   ; doppelakut 
    BSUnicode("≈±")
  Else If A_PriorHotkey = #^^    ; brevis
    BSUnicode("≈≠")
  Else If A_PriorHotkey = ++     ; macron
    BSUnicode("≈´")
  Else If A_PriorHotkey = #^+¥   ; ogonek
    BSUnicode("≈≥")
  Else If A_PriorHotkey = <^>!+¥ ; Ring
    BSUnicode("≈Ø")
  Else If A_PriorHotkey = +      ; tilde
    BSUnicode("≈©")
  Else
    send u
Return

s::
  If A_PriorHotkey = #^+        ; Diaerese
    Send, {bs}Ô
  Else If A_PriorHotkey = ++    ; macron
    BSUnicode("ƒ´")
  Else If A_PriorHotkey = #^^   ; brevis
    BSUnicode("ƒ≠")
  Else If A_PriorHotkey = #^+¥  ; ogonek
    BSUnicode("ƒØ")
  Else If A_PriorHotkey = +     ; tilde
    BSUnicode("ƒ©")
  Else If A_PriorHotkey = <^>!¥ ; (ohne) punkt dar¸ber 
    BSUnicode("ƒ±")
  Else 
    Send i
Return

d::
  If A_PriorHotkey = #^+         ; Diaerese
    Send {bs}‰
  Else If A_PriorHotkey = <^>!+¥ ; Ring 
    Send {bs}Â
  Else If A_PriorHotkey = +      ; tilde
    BSUnicode("√£")
  Else If A_PriorHotkey = #^+¥   ; ogonek
    BSUnicode("ƒÖ")
  Else If A_PriorHotkey = ++     ; macron
    BSUnicode("ƒÅ")
  Else If A_PriorHotkey = #^^    ; brevis
    BSUnicode("ƒÉ")
  Else 
    Send a
Return 

f::
  If A_PriorHotkey = #^+        ; Diaerese
    Send, {bs}Î
  Else If A_PriorHotkey = #^+¥  ; ogonek
    BSUnicode("ƒô")
  Else If A_PriorHotkey = ++    ; macron
    BSUnicode("ƒì")
  Else If A_PriorHotkey = #^^   ; brevis
    BSUnicode("ƒï")
  Else If A_PriorHotkey = +^    ; caron
    BSUnicode("ƒõ")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("ƒó")
  Else 
    Send e
Return 

g::
  If A_PriorHotkey = #^+         ; Diaerese
    Send, {bs}ˆ
  Else If A_PriorHotkey = +      ; tilde
    BSUnicode("√µ")
  Else If A_PriorHotkey = #^++   ; doppelakut
    BSUnicode("≈ë")
  Else If A_PriorHotkey = <^>!+  ; Schr‰gstrich
    BSUnicode("√∏")
  Else If A_PriorHotkey = ++     ; macron
    BSUnicode("≈ç")
  Else If A_PriorHotkey = #^^    ; brevis 
    BSUnicode("≈è")
  Else 
    send o
Return

h::
  If A_PriorHotkey = ^           ; circumflex
    BSUnicode("≈ù")
  Else If A_PriorHotkey = ¥      ; akut 
    BSUnicode("≈õ")
  Else If A_PriorHotkey = +^     ; caron
    BSUnicode("≈°")
  Else If A_PriorHotkey = #^¥    ; cedilla
    BSUnicode("≈ü")
  Else If A_PriorHotkey = <^>!¥  ; punkt dar¸ber 
    BSUnicode("·π°")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·π£")
  Else   
    send s
Return

j::
  If A_PriorHotkey = ¥          ; akut
    BSUnicode("≈Ñ")
  Else If A_PriorHotkey = +     ; tilde
    BSUnicode("√±")
  Else If A_PriorHotkey = +^    ; caron
    BSUnicode("≈à")
  Else If A_PriorHotkey = #^¥   ; cedilla
    BSUnicode("≈Ü")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("·πÖ")
  Else
    send n
Return

k::
  If A_PriorHotkey = ¥           ; akut 
    BSUnicode("≈ï")
  Else If A_PriorHotkey = +^     ; caron
    BSUnicode("≈ô")
  Else If A_PriorHotkey = #^¥    ; cedilla
    BSUnicode("≈ó")
  Else If A_PriorHotkey = <^>!¥  ; punkt dar¸ber 
    BSUnicode("·πô")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·πõ")
  Else 
    send r
Return

l::  
  If A_PriorHotkey = +^          ; caron 
    BSUnicode("≈•")
  Else If A_PriorHotkey = #^¥    ; cedilla
    BSUnicode("≈£")
  Else If A_PriorHotkey = #^+^   ; Querstrich
    BSUnicode("≈ß")
  Else If A_PriorHotkey = <^>!¥  ; punkt dar¸ber 
    BSUnicode("·π´")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·π≠")
  Else 
    send t
Return

ˆ::
  If A_PriorHotkey = #^+^        ; Querstrich
    BSUnicode("ƒë")
  Else If A_PriorHotkey = +^     ; caron
    BSUnicode("ƒè")
  Else If A_PriorHotkey = <^>!¥  ; punkt dar¸ber 
    BSUnicode("·∏ã")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·∏ç")
  Else 
    send d
Return

‰::  
  If A_PriorHotkey = #^+       ; Diaerese
    Send {bs}ˇ
  Else If A_PriorHotkey = ^    ; circumflex
    BSUnicode("≈∑")
  Else
    send y
Return

;SC02B (#) wird zu AltGr

;SC056 (<) wird zu Mod5
y::send ˆ
x::send ¸
c::send ‰
v::
  If A_PriorHotkey = <^>!¥      ; punkt dar¸ber 
    BSUnicode("·πó")
  Else
    send p
Return

b::
  If A_PriorHotkey = +^         ; caron
    BSUnicode("≈æ")
  Else If A_PriorHotkey = ¥     ; akut
    BSUnicode("≈∫")
  Else If A_PriorHotkey = <^>!¥ ; punkt dr¸ber
    BSUnicode("≈º")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("≈º")
  Else 
    Send z
Return 

n::
  If A_PriorHotkey = <^>!¥      ; punkt dar¸ber 
    BSUnicode("·∏É")
  Else 
    send b
Return

m::
  If A_PriorHotkey = <^>!¥       ; punkt dar¸ber 
    BSUnicode("·πÅ")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·πÉ")
  Else 
    send m
Return

,::send `,
.::send .

-::
  If A_PriorHotkey = ^           ; circumflex
    BSUnicode("ƒµ")
  Else
    send j
Return

Space::
  If A_PriorHotkey = ^           ; circumflex
    BSUnicode("ÀÜ")
  Else If A_PriorHotkey = +      ; tilde 
    BSUnicode("Àú")
  Else
    Send {Space}
Return

Enter::Send {Enter}
Esc::Send {Esc}


;2. Ebene (Shift)
;---------

+^::Unicode("Àá")  ; caron, tot
+1::send ∞
+2::send ∂
+3::send ß
+4::send $
+5::send Ä
+6::send ™
+7::send ∫
+8::send Ñ
+9::send ì
+0::send î
+ﬂ::Unicode("‚Äì") ; Ged
+¥::send `` 

+q::send X
+w::
  If A_PriorHotkey = <^>!+^      ; punkt darunter
    BSUnicode("·πæ")
  Else 
    send V
Return

+e::
  If A_PriorHotkey = ¥           ; akut 
    BSUnicode("ƒπ")
  Else If A_PriorHotkey = +^     ; caron 
    BSUnicode("ƒΩ")
  Else If A_PriorHotkey = #^¥    ; cedilla
    BSUnicode("ƒª")
  Else If A_PriorHotkey = <^>!+  ; Schr‰gstrich 
    BSUnicode("≈Å")
  Else If A_PriorHotkey = <^>!^  ; Mittenpunkt 
    BSUnicode("ƒø")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·∏∂")
  Else 
    send L
return

+r::
  If A_PriorHotkey = ^          ; circumflex 
    BSUnicode("ƒà")
  Else If A_PriorHotkey = +^    ; caron 
    BSUnicode("ƒå")
  Else If A_PriorHotkey = ¥     ; akut 
    BSUnicode("ƒÜ")
  Else If A_PriorHotkey = #^¥   ; cedilla 
    BSUnicode("√á")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("ƒä")
  Else 
    Send C
Return 

+t::
  If A_PriorHotkey = ^           ; circumflex
    BSUnicode("≈¥")
  Else
    send W
Return

+z::  
  If A_PriorHotkey = #^¥         ; cedilla 
    BSUnicode("ƒ∂")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·∏≤")
  Else
    send K
Return

+u::
  If A_PriorHotkey = ^           ; circumflex
    BSUnicode("ƒ§")
  Else If A_PriorHotkey = #^+^   ; Querstrich
    BSUnicode("ƒ¶")
  Else If A_PriorHotkey = <^>!¥  ; punkt dar¸ber 
    BSUnicode("·∏¢")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·∏§")
  Else send H
Return

+i::
  If A_PriorHotkey = ^          ; circumflex
    BSUnicode("ƒú")
  Else If A_PriorHotkey = #^^   ; brevis 
    BSUnicode("ƒû")
  Else If A_PriorHotkey = #^¥   ; cedilla 
    BSUnicode("ƒ¢")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("ƒ†")
  Else send G
Return

+o::
  If A_PriorHotkey = <^>!+       ; durchgestrichen
    BSUnicode("‚Ç£")
  Else If A_PriorHotkey = <^>!¥  ; punkt dar¸ber 
    BSUnicode("·∏û")
  Else send F
Return

+p::send Q
+¸::send ﬂ

++::Unicode("Àâ")  ; macron, tot 

+a::
  If A_PriorHotkey = #^+         ; Diaerese
    Send, {bs}‹
  Else If A_PriorHotkey = <^>!+¥ ; Ring
    BSUnicode("≈Æ")
  Else If A_PriorHotkey = #^^    ; brevis
    BSUnicode("≈¨")
  Else If A_PriorHotkey = #^++   ; doppelakut
    BSUnicode("≈∞")
  Else If A_PriorHotkey = +^     ; caron 
    BSUnicode("≈Æ")
  Else If A_PriorHotkey = ++     ; macron
    BSUnicode("≈™")
  Else If A_PriorHotkey = #^^    ; brevis 
    BSUnicode("≈¨")
  Else If A_PriorHotkey = #^+¥   ; ogonek
    BSUnicode("≈≤")
  Else If A_PriorHotkey = +      ; tilde
    BSUnicode("≈®")
  Else
    send U
Return

+s::
  If A_PriorHotkey = #^+ ; Diaerese
    Send, {bs}œ
  Else If A_PriorHotkey = ++ ; macron
    BSUnicode("ƒ™")
  Else If A_PriorHotkey = #^^ ; brevis 
    BSUnicode("ƒ¨")
  Else If A_PriorHotkey = #^+¥ ; ogonek
    BSUnicode("ƒÆ")
  Else If A_PriorHotkey = + ; tilde
    BSUnicode("ƒ®")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("ƒ∞")
  Else 
    Send I
Return

+d::
  If A_PriorHotkey = #^+ ; Diaerese
    Send {bs}ƒ
  Else If A_PriorHotkey = + ; tilde
    BSUnicode("√É")
  Else If A_PriorHotkey = <^>!+¥ ; Ring 
    Send {bs}≈
  Else If A_PriorHotkey = ++ ; macron
    BSUnicode("ƒÄ")
  Else If A_PriorHotkey = #^^ ; brevis 
    BSUnicode("ƒÇ")
  Else If A_PriorHotkey = #^+¥ ; ogonek
    BSUnicode("ƒÑ")
  Else 
    Send A
Return 

+f::
  If A_PriorHotkey = #^+ ; Diaerese
    Send, {bs}À
  Else If A_PriorHotkey = +^ ; caron
    BSUnicode("ƒö")
  Else If A_PriorHotkey = ++ ; macron
    BSUnicode("ƒí")
  Else If A_PriorHotkey = #^^ ; brevis 
    BSUnicode("ƒî")
  Else If A_PriorHotkey = #^+¥ ; ogonek 
    BSUnicode("ƒò")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("ƒñ")
  Else 
    Send E
Return 

+g::
  If A_PriorHotkey = <^>!+ ; Schr‰gstrich
    BSUnicode("√ò")
  Else If A_PriorHotkey = + ; tilde
    BSUnicode("√ï")
  Else If A_PriorHotkey = #^++ ; doppelakut
    BSUnicode("≈ê")
  Else If A_PriorHotkey = #^+ ; Diaerese
    Send {bs}÷
  Else If A_PriorHotkey = ++ ; macron 
    BSUnicode("≈å")
  Else If A_PriorHotkey = #^^ ; brevis 
    BSUnicode("≈é")
  Else
    send O
Return

+h::
  If A_PriorHotkey = ^ ; circumflex
    BSUnicode("≈ú")
  Else If A_PriorHotkey = +^ ; caron
    BSUnicode("≈†")
  Else If A_PriorHotkey = ¥ ; akut 
    BSUnicode("≈ö")
  Else If A_PriorHotkey = #^¥ ; cedilla 
    BSUnicode("≈û")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("·π")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·π¢")
  Else
    send S
Return

+j::
  If A_PriorHotkey = +^ ; caron
    BSUnicode("≈á")
  Else If A_PriorHotkey = + ; tilde
    BSUnicode("√ë")
  Else If A_PriorHotkey = ¥ ; akut 
    BSUnicode("≈É")
  Else If A_PriorHotkey = #^¥ ; cedilla 
    BSUnicode("≈Ö")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("·πÑ")
  Else
    send N
Return

+k::
  If A_PriorHotkey = +^ ; caron
    BSUnicode("≈ò")
  Else If A_PriorHotkey = ¥ ; akut 
    BSUnicode("≈î")
  Else If A_PriorHotkey = #^¥ ; cedilla 
    BSUnicode("≈ñ")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("·πò")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·πö")
  Else 
    send R
Return

+l::
  If A_PriorHotkey = +^ ; caron
    BSUnicode("≈§")
  Else If A_PriorHotkey = #^¥ ; cedilla 
    BSUnicode("≈¢")
  Else If A_PriorHotkey = #^+^ ; Querstrich
    BSUnicode("≈¶")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("·π™")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·π¨")
  Else 
    send T
Return


+ˆ::
  If A_PriorHotkey = #^+^ ; Querstrich
    BSUnicode("ƒê")
  Else If A_PriorHotkey = +^ ; caron 
    BSUnicode("ƒé")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("·∏ä")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·∏å")
  Else send D
Return

+‰::  
  If A_PriorHotkey = #^+ ; Diaerese
    Send {bs}ü
  Else If A_PriorHotkey = ^ ; circumflex
    BSUnicode("≈∂")
  Else
    send Y
Return

+y::send ÷
+x::send ‹
+c::send ƒ

+v::
  If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("·πñ")
  Else 
    send P
Return

+b::  
  If A_PriorHotkey = +^ ; caron  
    BSUnicode("≈Ω")
  Else If A_PriorHotkey = ¥ ; akut 
    BSUnicode("≈π")
  Else If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("≈ª")
  Else
    send Z
Return

+n::
  If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("·∏Ç")
  Else 
    send B
Return

+m::
  If A_PriorHotkey = <^>!¥ ; punkt dar¸ber 
    BSUnicode("·πÄ")
  Else If A_PriorHotkey = <^>!+^ ; punkt darunter 
    BSUnicode("·πÇ")
  Else 
    send M
Return

+,::send `;
+.::send :

+-::
  If A_PriorHotkey = ^ ; circumflex
    BSUnicode("ƒ¥")
  Else
    send J
Return


;3. Ebene: Mod3
;(Win+Ctrl)
;----------------

#^^::Unicode("Àò") ; brevis, soll tot
#^1::Unicode("¬¨")
#^2::send {^}{space} 
#^3::send 3 
#^4::send • 
#^5::send £  
#^6::send Ê 
#^7::send ú 
#^8::send Ç
#^9::send ë
#^0::send í
#^ﬂ::Unicode("‚Äî")
#^¥::send ∏ ; cedilla, soll tot

#^q::send @ 
#^w::send _
#^e::send [
#^r::send ]
#^t::send {^}{space} ; untot
#^z::sendraw !
#^u::send <
#^i::send >
#^o::send `=
#^p::send `;
#^¸::Unicode("ƒ≥")  ;ij
#^+::Unicode("¬®") ; Diaerese, soll tot

#^a::send \
#^s::send `/
#^d::sendraw { 
#^f::sendraw } 
#^g::send *
#^h::send ?
#^j::send (
#^k::send )
#^l::send -
#^ˆ::send :
#^‰::send y

#^y::sendraw ~ 
#^x::send $
#^c::send |
#^v::send {#}
#^b::send ``{space} ; untot
#^n::send {+}
#^m::send `% 
#^,::send {&}
#^.::send "
#^-::send '



;4. Ebene: Mod3+Shift
;(Win+Ctrl+Shift)
;---------------------

#^+^::send - 
#^+1::send π 
#^+2::send ≤
#^+3::send ≥
#^+4::send ¢ 
#^+5::send § 
#^+6::send ∆ 
#^+7::send å 
#^+8::send ª 
#^+9::send ´ 
#^+0::send õ 
#^+ﬂ::send ã 
#^+¥::Unicode("Àõ") ; ogonek, soll tot

#^+q::Unicode("Œæ")  ;xi
#^+w::send v
#^+e::Unicode("Œª")  ;lambda
#^+r::Unicode("œá")  ;chi 
#^+t::send w
#^+z::Unicode("Œ∫") ;kappa
#^+u::Unicode("œà") ;psi
#^+i::Unicode("Œ≥") ;gamma
#^+o::Unicode("œÜ") ;phi
#^+p::send q
#^+¸::Unicode("ƒ≤") ;IJ
#^++::send " ;doppelakut, soll tot

#^+a::send u
#^+s::Unicode("Œπ") ;iota
#^+d::Unicode("Œ±") ;alpha
#^+f::Unicode("Œµ") ;epsilon
#^+g::Unicode("œâ") ;omega
#^+h::Unicode("œÉ") ;sigma
#^+j::Unicode("ŒΩ") ;nu
#^+k::Unicode("œÅ") ;rho
#^+l::Unicode("œÑ") ;tau
#^+ˆ::Unicode("Œ¥") ;delta
#^+‰::Unicode("œÖ") ;upsilon

#^+y::send ˆ
#^+x::send ¸
#^+c::Unicode("Œ∑") ;eta
#^+v::Unicode("œÄ") ;pi
#^+b::Unicode("Œ∂") ;zeta
#^+n::Unicode("Œ≤") ;beta
#^+m::Unicode("Œº") ;mu
#^+,::Unicode("œë") ;vartheta?
#^+.::Unicode("Œ∏") ;theta
#^+-::send j

;#^+space::    ; gesch¸tztes Leerzeichen




;5. Ebene: Mod5
;(AltGr)
;-----------------

<^>!^::Unicode("¬∑") ; Mittenpunkt, tot mit l und L
<^>!4::Send {PgUp} ;Prev
<^>!8::Send /
<^>!9::Send *
<^>!0::Send -
<^>!ﬂ::Unicode("√∞") ; eth
<^>!¥::Unicode("Àô") ; punkt oben dr¸ber, soll tot

<^>!q::Send {Esc}
<^>!w::Send {Backspace}
<^>!e::Send {Up}
<^>!t::Send {Insert}
<^>!z::Send °
<^>!u::Send 7
<^>!i::Send 8
<^>!o::Send 9
<^>!p::Send {+}
<^>!¸::Unicode("…ô") ; ?
<^>!+::Unicode("/") ; Schr‰gstrich, soll tot 

<^>!a::Send {Home}
<^>!s::Send {Left}
<^>!d::Send {Down}
<^>!f::Send {Right}
<^>!g::Send {End}
<^>!h::Send ø
<^>!j::Send 4
<^>!k::Send 5
<^>!l::Send 6
<^>!ˆ::Send `,
<^>!‰::Send ˛ ; thorn


<^>!y::Send {Tab}
<^>!x::Send {Del}
<^>!c::Send {PgDn} ;Next
<^>!n::Send ±
<^>!m::Send 1
<^>!,::Send 2
<^>!.::Send 3
<^>!-::Send .

<^>!Space::Send 0
;<^>!SC138::Send {NumpadDot} 
  ; geht nicht, weil sonst AltGr nur noch , macht



;6. Ebene: Mod5+Shift
;(AltGr+Shift)
;-----------------------

<^>!+^::Send . ; punkt darunter
<^>!+4::Send +{Prev}
<^>!+ﬂ::Unicode("√ê") ; Eth
<^>!+¥::Unicode("Àö") ; ring obendrauf

<^>!+q::Unicode("Œû") ; Xi
<^>!+w::Unicode("Œõ") ; Lambda
<^>!+e::Send +{Up}
<^>!+r::Send © 
<^>!+t::Send +{Insert}
<^>!+u::Unicode("Œ®") ; Phi
<^>!+i::Unicode("Œì") ; Gamma
<^>!+o::Unicode("Œ¶") ; Psi
<^>!+¸::Unicode("∆è") ; ?
<^>!++::Unicode("Àè") ; komma drunter, soll tot 

<^>!+a::Send +{Home}
<^>!+s::Send +{Left}
<^>!+d::Send +{Down}
<^>!+f::Send +{Right}
<^>!+g::Send +{End}
<^>!+h::Unicode("Œ£")  ; Sigma
<^>!+j::Unicode("‚Ññ") ; No
<^>!+k::Unicode("¬Æ")  ; (R)
<^>!+l::Unicode("‚Ñ¢") ; TM
<^>!+ˆ::Unicode("Œî")  ; Delta
<^>!+‰::Send ﬁ         ; Thorn 

<^>!+y::Send +{Tab}
<^>!+c::Send +{PgDn}
<^>!+v::Unicode("Œ†") ; Pi
<^>!+b::Unicode("Œ©") ; Omega
<^>!+.::Unicode("Œò") ; Theta 



;Strg/Ctrl
;---------

^1::send ^1
^2::send ^2
^3::send ^3
^4::send ^4
^5::send ^5
^6::send ^6
^7::send ^7
^8::send ^8
^9::send ^9
^0::send ^0

^q::send ^x
^w::send ^v
^e::send ^l
^r::send ^c
^t::send ^w
^z::send ^k
^u::send ^h
^i::send ^g
^o::send ^f
^p::send ^q
^¸::send ^ﬂ

^a::send ^u
^s::send ^i
^d::send ^a
^f::send ^e
^g::send ^o
^h::send ^s
^j::send ^n
^k::send ^r
^l::send ^t
^ˆ::send ^d
^‰::send ^y


^y::send ^ˆ
^x::send ^¸
^c::send ^‰
^v::send ^p
^b::send ^z
^n::send ^b
^m::send ^m
^-::send ^j


;Alt-Ebene
;---------

<!1::send !1
<!2::send !2
<!3::send !3
<!4::send !4
<!5::send !5
<!6::send !6
<!7::send !7
<!8::send !8
<!9::send !9
<!0::send !0

<!q::send !x
<!w::send !v
<!e::send !l
<!r::send !c
<!t::send !w
<!z::send !k
<!u::send !h
<!i::send !g
<!o::send !f
<!p::send !q
<!¸::send !ﬂ

<!a::send !u
<!s::send !i
<!d::send !a
<!f::send !e
<!g::send !o
<!h::send !s
<!j::send !n
<!k::send !r
<!l::send !t
<!ˆ::send !d
<!‰::send !y

<!y::send !ˆ
<!x::send !¸
<!c::send !‰
<!v::send !p
<!b::send !z
<!n::send !b
<!m::send !m
<!-::send !j


;Win-Ebene
;---------

#1::send #1
#2::send #2
#3::send #3
#4::send #4
#5::send #5
#6::send #6
#7::send #7
#8::send #8
#9::send #9
#0::send #0
#ﬂ::send #-

#q::send #x
#w::send #v

#e::  
  Run,%A_WinDir%\System32\Rundll32.exe User32.dll`,LockWorkStation 
  return
   ; #e::send #l  funktioniert nicht, Computer wird nicht gesperrt
   ; http://www.autohotkey.com/forum/viewtopic.php?p=66937#66937

#r::send #c
#t::send #w
#z::send #k
#u::send #h
#i::send #g
#o::send #f
#p::send #q
#¸::send #ﬂ

#a::send #u
#s::send #i
#d::send #a
#f::send #e
#g::send #o
#h::send #s
#j::send #n
#k::send #r
#l::send #t
#ˆ::send #d
#‰::send #y

#y::send #ˆ
#x::send #¸
#c::send #‰
#v::send #p
#b::send #z
#n::send #b
#m::send #m
#-::send #j

;Strg-Shift-Ebene
;-----------------

^+1::send ^+1
^+2::send ^+2
^+3::send ^+3
^+4::send ^+4
^+5::send ^+5
^+6::send ^+6
^+7::send ^+7
^+8::send ^+8
^+9::send ^+9
^+0::send ^+0

^+q::send ^+x
^+w::send ^+v
^+e::send ^+l
^+r::send ^+c
^+t::send ^+w
^+z::send ^+k
^+u::send ^+h
^+i::send ^+g
^+o::send ^+f
^+p::send ^+q
^+¸::send ^+ﬂ

^+a::send ^+u
^+s::send ^+i
^+d::send ^+a
^+f::send ^+e
^+g::send ^+o
^+h::send ^+s
^+j::send ^+n
^+k::send ^+r
^+l::send ^+t
^+ˆ::send ^+d
^+‰::send ^+y


^+y::send ^+ˆ
^+x::send ^+¸
^+c::send ^+‰
^+v::send ^+p
^+b::send ^+z
^+n::send ^+b
^+m::send ^+m
^+-::send ^+j


; -----------------------------------------
; Nummernblock
; -----------------
;
; 1. Ebene
; NumLock On
; --> Zahlenblock
; ------------------
;
; 2. Ebene
; NumLock Off 
; oder NumLock On + Shift
; --> Cursortasten
; -----------------

; 3. Ebene
; NumLock on + Mod3
; --> Pfeile
; -----------------

#^NumpadDiv::send ˜
#^NumpadMult::send ◊
#^NumpadSub::send -
#^NumpadAdd::send ±
#^NumpadEnter::Unicode("‚â") ; neq

#^Numpad7::Unicode("‚Öû")   ; 7/8
#^Numpad8::Unicode("‚Üë")   ; uparrow
#^Numpad9::Unicode("‚Öú")   ; 3/8
#^Numpad4::Unicode("‚Ü?")   ; leftarrow
#^Numpad5::send Ü
#^Numpad6::Unicode("‚Üí")   ; rightarrow
#^Numpad1::send π 
#^Numpad2::Unicode("‚Üì")   ; downarrow
#^Numpad3::send ≥
#^Numpad0::send `%
#^NumPadDot::send .




; ---------------------------
; 4. Ebene
; NumLock off + Mod3 + Shift
; --> Br¸che
; ---------------------------

#^+NumpadDiv::Unicode("‚àï")   ; slash
#^+NumpadMult::Unicode("‚ãÖ")  ; cdot
#^+NumpadSub::send -           ; eig. unbelegt
#^+NumpadAdd::Unicode("‚àì")   ; -+
#^+NumpadEnter::Unicode("‚âà") ; approx

#^+NumpadHome::Unicode("‚Öõ")  ; 1/8
#^+NumpadUp::Unicode("‚Ö?")    ; 5/8
#^+NumpadPgUp::Unicode("‚Öú")  ; 3/8
#^+NumpadLeft::send º
#^+NumpadClear::send Ω
#^+NumpadRight::send æ
#^+NumpadEnd::send π 
#^+NumpadDown::send ≤ 
#^+NumpadPgDn::send ≥ 
#^+NumpadIns::send â 
#^+NumPadDel::send `,
  


; ------------------------------
; 5. Ebene
; NumLock on + Mod5 
; --> Br¸che (genau wie Ebene 4)
; ------------------------------


<^>!NumpadDiv::send / 
<^>!NumpadMult::Unicode("‚ãÖ")   ; cdot
<^>!NumpadSub::send -            ; eig. unbelegt
<^>!NumpadAdd::Unicode("‚àì")    ; -+
<^>!NumpadEnter::Unicode("‚âà")  ; approx


<^>!Numpad7::Unicode("‚Öõ")  ; 1/8
<^>!Numpad8::Unicode("‚Ö?")  ; 5/8
<^>!Numpad9::Unicode("‚Öú")  ; 3/8
<^>!Numpad4::send º
<^>!Numpad5::send Ω
<^>!Numpad6::send æ
<^>!Numpad1::send π 
<^>!Numpad2::send ≤ 
<^>!Numpad3::send ≥ 
<^>!Numpad0::send â 
<^>!NumPadDot::send `,


; ------------------------------------

Unicode(code)
  {
  saved_clipboard := ClipboardAll
  Transform, Clipboard, Unicode, %code%
  send ^v
  Clipboard := saved_clipboard
  }

BSUnicode(code)
  {
  saved_clipboard := ClipboardAll
  Transform, Clipboard, Unicode, %code%
  send {bs}^v
  Clipboard := saved_clipboard
  }


toggleneo:
   if state <>
   {
      state =
      menu, tray, rename, %enable%, %disable%
   }
   else
   {
      state = : Deaktiviert
      menu, tray, rename, %disable%, %enable%
   }

   menu, tray, tip, %name%%state%
   suspend
return


help:
   Run, %A_WinDir%\hh mk:@MSITStore:autohotkey.chm
return


about:
   msgbox, 64, %name%, 
   (
   %name% 
   `nDas NEO-Layout ersetzt das ¸bliche deutsche 
   Tastaturlayout mit der Alternative NEO, 
   beschrieben auf http://www.neo-layout.org/. 
   `nDazu sind keine Administratorrechte nˆtig. 
   `nWenn Autohotkey aktiviert ist, werden alle Tastendrucke 
   abgefangen und statt dessen eine ‹bersetzung weitergeschickt. 
   `nDies geschieht transparent f¸r den Anwender, 
   es muss nichts installiert werden. 
   `nDie Zeichen¸bersetzung kann leicht ¸ber das Icon im 
   Systemtray deaktiviert werden.  `n
   )
return


neo:
   run http://www.neo-layout.org/
return

autohotkey:
   run http://autohotkey.com/
return

open:
   ListLines ; shows the Autohotkey window
return

edit:
   edit
return

reload:
   Reload
return

hide:
   menu, tray, noicon
return

exitprogram:
   exitapp
return